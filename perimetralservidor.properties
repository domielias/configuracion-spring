#Indicando el puerto que estará utilizando al aplicación
# el valor en 0, Spring Boot toma un puerto aleatorio.
server.port = 8083

#Configuración para el registro en Eureka indicando la dirección
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://${EUREKA_SERVER:localhost}:8761/eureka

# Exponiendo los endpoints
management.endpoints.web.exposure.include=*
management.health.probes.enabled=true
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
spring.cloud.gateway.routes[0].id=events
spring.cloud.gateway.routes[0].uri=lb://compraeventosservicio
spring.cloud.gateway.routes[0].predicates[0].path=/events/**
spring.cloud.gateway.routes[1].id=users
spring.cloud.gateway.routes[1].predicates[0].path=/users/**
spring.cloud.gateway.routes[1].uri=lb://usuarioservicio
spring.cloud.gateway.routes[2].id=notifications
spring.cloud.gateway.routes[2].uri=lb://notificacionesservicio
spring.cloud.gateway.routes[2].predicates[0].path=/notifications/**
spring.cloud.gateway.routes[3].id=clienteweb
spring.cloud.gateway.routes[3].predicates[0].path=/**
spring.cloud.gateway.routes[3].uri=http://localhost:8080
# spring.config.import=configserver:http://localhost:8888
# Configurando la información del servidor perimetral
#zuul.routes.estudiante.service-id=microservicio-estudiante
#zuul.routes.estudiante.path=/

# Nivel del logging
logging.level.org.springframework=ERROR
logging.level.edu.pucmm.=DEBUG

# Patron del logging
logging.pattern.console=%d{HH:mm:ss} [%t] %-5level %logger{36} - %msg%n

# CORS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,OPTIONS,DELETE,HEAD,PATCH
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
